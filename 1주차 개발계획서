캡스톤 디자인 개발 계획서
1. 프로젝트 개요
본 프로젝트는 학생 관리 시스템을 개발하는 것으로, 대학생들의 성적,출석 정보를 효율적으로 관리하고 이를 바탕으로 성적 계산, 등급 부여를 자동화하는 프로그램을 만들 것 입니다. 
이 시스템은 학생들의 중간고사, 기말고사 성적과 출석 데이터를 종합하여 최종 성적을 계산하고, 성적에 따른 등급을 자동으로 부여합니다.
또한, 학생 정보는 파일 입출력을 통해 저장하고 불러올 수 있으며, 사용자가 직관적으로 학생 정보를 관리할 수 있는 인터페이스를 제공합니다.

2. 프로젝트 목표
학생 정보 관리 자동화: 학생들의 성적을 계산하고 등급을 부여하는 과정을 자동화하여 관리자의 수고를 덜어줍니다.
성적 및 출석 관리: 중간고사, 기말고사 성적, 출석 점수를 반영하여 최종 성적을 계산하고, 점수에 따라 등급을 자동으로 부여합니다.
파일 입출력 기능: 학생 정보를 txt파일에 저장하고 불러오는 기능을 구현하여 지속적인 데이터 저장을 가능하게 합니다.
3. 기능
3.1 학생 관리
학생 정보 추가: 학생의 이름, 학번, 중간고사 점수, 기말고사 점수, 출석 점수를 포함한 학생 정보를 추가합니다.
학생 정보 삭제: 학번을 기준으로 특정 학생의 정보를 삭제합니다. 학번이 일치하는 학생이 없으면 오류 메시지를 출력합니다.
학생 목록 보기: 등록된 학생들의 정보를 모두 출력합니다. 이 정보에는 이름, 학번, 중간고사 점수, 기말고사 점수, 출석 점수, 최종 성적, 성적 등급이 포함됩니다.
학생 정보 저장: 현재 등록된 모든 학생의 정보를 파일에 저장합니다. 파일은 students.txt로 저장되며, 프로그램 종료 시 자동으로 저장됩니다.
3.2 성적 계산 및 등급 부여
성적 계산
중간고사 점수는 40%를 차지하고, 기말고사 점수는 50%를 만들었습니다.
출석 점수는 10점으로 결석 및 지각에 따라 차감됩니다.
지각 1회:-0.2점 차감
지각 3회=결석 1회로 환산하여 -1점 차감
결석 1회: -1점 차감
결석 4회 이상: F 처리
등급 부여: 성적에 따른 등급은 다음과 같이 자동으로 부여됩니다.
A+: 상위 10%
A: 상위 11% ~ 30%
B+: 상위 31% ~ 40%
B: 상위 41% ~ 60%
C+: 상위 61% ~ 70%
C: 나머지
F: 시험에서 하나라도 0점(시험 미참 포함)이거나 결석이 4회 이상인 경우
3.3 파일 입출력
파일 저장: 학생 정보는 students.txt라는 텍스트 파일에 저장됩니다. 이 파일을 통해 프로그램을 종료한 후에도 학생 정보를 유지할 수 있습니다.
파일 로드: 프로그램 시작 시 저장된 파일에서 학생 정보를 불러옵니다. 만약 파일이 없다면 새로 학생 정보를 추가할 수 있습니다.
3.4 UI
메뉴는
학생 추가
학생 삭제
학생 목록 보기
학생 정보 저장
종료
로 만들 생각입니다.
4. 개발 환경
언어: C++
개발 툴:Visual Studio2022
파일 저장 형식: 텍스트 파일(students.txt)
5. 일정 계획
1주차 : 개발계획서 작성
2주차 : 기능에 따른 요구 사항 정리 및 시스템 개발
3주차 : 기능에 따른 요구 사항 정리 및 시스템 개발, 중간에 필요한 기능 추가 및 수정 작업 예정
4주차 : 기능 구현 및 개발, 테스트 및 오류 수정,코드 주석등 작업 예정
5주차~: 추가로 구현 할 기능 추가 및 테스트,시스템 개발 예정

6. 테스트 계획
단위 테스트: 각 기능이 독립적으로 잘 작동하는지 확인입니다.(예시로: 학생 추가, 삭제, 저장 등의 기능)
경계값 테스트: 결석 3회, 지각 3회 처리, 성적 계산의 정확성 확인입니다.
통합 테스트: 학생 추가부터 성적 계산까지 모든 기능이 통합되어 잘 동작하는지 확인하는 작업입니다.
등급 테스트 : 최종 성적을 등급에 따라 제대로 분류하는지 확인하는 작업입니다.
파일 입출력 테스트: 파일에 저장된 학생 정보가 정확하게 불러와지고 저장되는지 확인하는 작업입니다.
7. 기대 효과
성적 관리 자동화: 수동으로 성적을 계산하고 등급을 부여하는 과정이 자동화
데이터 저장의 지속성: 학생 정보를 파일로 저장하여 프로그램 종료 후에도 데이터가 유지
효율적인 학생 정보 관리: 학생 추가, 삭제, 조회 기능을 통해 학생 정보를 손쉽게 관리
